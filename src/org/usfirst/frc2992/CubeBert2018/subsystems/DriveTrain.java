// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2992.CubeBert2018.subsystems;

import org.usfirst.frc2992.CubeBert2018.RobotMap;
import org.usfirst.frc2992.CubeBert2018.commands.*;

import com.ctre.phoenix.motorcontrol.ControlMode;
import com.ctre.phoenix.motorcontrol.can.TalonSRX;
import org.usfirst.frc2992.CubeBert2018.mhJoystick;

import edu.wpi.first.wpilibj.command.Subsystem;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDSourceType;
import edu.wpi.first.wpilibj.Solenoid;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class DriveTrain extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final Solenoid driveTrainSolenoid = RobotMap.driveTraindriveTrainSolenoid;
    private final WPI_TalonSRX rFDriveMotor = RobotMap.driveTrainrFDriveMotor;
    private final WPI_TalonSRX rBDriveMotor = RobotMap.driveTrainrBDriveMotor;
    private final WPI_TalonSRX rMDriveMotor = RobotMap.driveTrainrMDriveMotor;
    private final WPI_TalonSRX lFDriveMotor = RobotMap.driveTrainlFDriveMotor;
    private final WPI_TalonSRX lMDriveMotor = RobotMap.driveTrainlMDriveMotor;
    private final WPI_TalonSRX lBDriveMotor = RobotMap.driveTrainlBDriveMotor;
    private final Encoder rightDriveEnc = RobotMap.driveTrainrightDriveEnc;
    private final Encoder leftDriveEnc = RobotMap.driveTrainleftDriveEnc;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new driveSticks());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    public void allStop() {
    	rFDriveMotor.set(0.0);
    	rMDriveMotor.set(0.0);
    	rBDriveMotor.set(0.0);
    	lFDriveMotor.set(0.0);
    	lMDriveMotor.set(0.0);
    	lBDriveMotor.set(0.0);
    }
    
    public void tankDrive(double left, double right) {
    	rFDriveMotor.set(right);
    	rMDriveMotor.set(right);
    	rBDriveMotor.set(right);
    	lFDriveMotor.set(left);
    	lMDriveMotor.set(left);
    	lBDriveMotor.set(left);
    	
    }
    
    public void highGear() {
    	driveTrainSolenoid.set(true);
    }
    
    public void lowGear() {
    	driveTrainSolenoid.set(false);
    }
    
    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

